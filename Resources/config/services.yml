services:

    trinity.notification.entity_converter:
        class: Trinity\NotificationBundle\Notification\EntityConverter
        arguments:
            - "@trinity.notification.annotations.utils"
            - "@logger"
            - "@event_dispatcher"
            - "%trinity.notification.entity_id_field%"
            - "%trinity.notification.is_client%"


    trinity.notification.services.notification_parser:
        class: Trinity\NotificationBundle\Notification\NotificationParser
        arguments:
            - "@logger"
            - "@trinity.notification.entity_conversion_handler"
            - "@event_dispatcher"
            - "@doctrine.orm.entity_manager"
            - "@trinity.notification.entity_associator"
            - "%trinity.notification.entity_id_field%"
            - "%trinity.notification.is_client%"
            - "%trinity.notification.entities%"

    trinity.notification.annotations.utils:
        class: Trinity\NotificationBundle\Notification\AnnotationsUtils


    trinity.notification.utils:
        arguments:
            - "@trinity.notification.annotations.utils"
        class: Trinity\NotificationBundle\Notification\NotificationUtils


    trinity.notification.manager:
        class: Trinity\NotificationBundle\Notification\NotificationManager
        arguments:
            - "@event_dispatcher"
            - "@trinity.notification.batch_manager"


    trinity.notification.entity_listener:
        class: Trinity\NotificationBundle\EventListener\EntityListener
        arguments:
            - "@event_dispatcher"
            - "@trinity.notification.utils"
            - "@trinity.notification.annotations.utils"
            - "%trinity.notification.is_client%"
        tags:
            - { name: doctrine.event_listener, event: postRemove,  priority: 255 }
            - { name: doctrine.event_listener, event: preRemove,  priority: 255 }
            - { name: doctrine.event_listener, event: postUpdate,  priority: 200 }
            - { name: doctrine.event_listener, event: postPersist, priority: 200 }
            - { name: kernel.event_listener,   event: trinity.notifications.enableNotification, priority: 200, method: enableNotification}
            - { name: kernel.event_listener,   event: trinity.notifications.disableNotification, priority: 200, method: disableNotification }
        calls:
            - [setRequestStack, ["@request_stack"]]


    trinity.notification.terminate_listener:
        class: Trinity\NotificationBundle\EventListener\KernelTerminateListener
        arguments:
            - "@trinity.notification.manager"
            - "@logger"
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: onKernelTerminate}

    trinity.notification.notification_events_listener:
        class: Trinity\NotificationBundle\EventListener\NotificationEventsListener
        arguments:
            - "@trinity.notification.reader"
            - "@event_dispatcher"
            - "@trinity.notification.manager"
            - "%trinity.notification.is_client%"
        tags:
            - { name: kernel.event_listener, event: trinity.messages.readMessage, method: onMessageRead, priority: 100}
            - { name: kernel.event_listener, event: trinity.notifications.sendNotification, method: onSendNotificationEvent}

    trinity.notification.message_status_listener:
        class: Trinity\NotificationBundle\EventListener\MessageStatusListener
        arguments:
            - "@trinity.messages.message_sender"
            - "%trinity.notification.is_client%"
        tags:
            - { name: kernel.event_listener, event: trinity.messages.setMessageStatus, method: onSetMessageStatus}

    trinity.notification.batch_manager:
        class: Trinity\NotificationBundle\Notification\BatchManager
        parent: "trinity.messages.message_sender"

    trinity.notification.entity_conversion_handler:
        class: Trinity\NotificationBundle\Notification\EntityConversionHandler
        arguments:
            - "@event_dispatcher"
            - "@form.factory"
            - "%trinity.notification.forms%"
            - "%trinity.notification.entities%"

    trinity.notification.entity_associator:
        class: Trinity\NotificationBundle\Notification\EntityAssociator
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@trinity.notification.annotations.utils"
            - "%trinity.notification.is_client%"
            - "%trinity.notification.entity_id_field%"
            - "%trinity.notification.entities%"

    trinity.notification.reader:
        class: Trinity\NotificationBundle\Notification\NotificationReader
        arguments:
            - "@trinity.notification.services.notification_parser"
            - "@event_dispatcher"

    trinity.notification.notification_request_listener:
        class: Trinity\NotificationBundle\EventListener\NotificationRequestListener
        arguments:
            - "@trinity.notification.notification_request_handler"
        tags:
           - { name: kernel.event_listener, event: trinity.notifications.associationEntityNotFound,  method: onAssociationEntityNotFoundEvent}
           - { name: kernel.event_listener, event: trinity.notifications.notificationRequestEvent,  method: onNotificationRequestEvent}

    trinity.notification.notification_request_handler:
        class: Trinity\NotificationBundle\Notification\NotificationRequestHandler
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@trinity.messages.message_sender'
            - "@trinity.notification.entity_converter"
            - "@trinity.notification.utils"
            - "%trinity.notification.entities%"
            - "%trinity.notification.is_client%"

    trinity.bunny.client:
        class: Bunny\Client
        arguments:
            - host: "%rabbit_url%"
            - port: "%rabbit_port%"
            - user: "%rabbit_user%"
            - password: "%rabbit_password%"
            - persistent: 2
            - path: "/"

    trinity.notification.notification_status_manager:
        class: Trinity\NotificationBundle\Services\NotificationStatusManager
        arguments:
            - "@trinity.logger.elastic_read_log_service"
            - "@trinity.logger.elastic_log_service"